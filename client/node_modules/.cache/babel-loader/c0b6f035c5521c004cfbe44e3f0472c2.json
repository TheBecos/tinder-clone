{"ast":null,"code":"var _jsxFileName = \"C:\\\\OpenServer\\\\domains\\\\react_projects\\\\tinder-clone\\\\client\\\\src\\\\components\\\\ChatDisplay.js\",\n    _s = $RefreshSig$();\n\nimport Chat from \"./Chat\";\nimport ChatInput from \"./ChatInput\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatDisplay = _ref => {\n  _s();\n\n  let {\n    user,\n    clickedUser\n  } = _ref;\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const [usersMessages, setUserMessages] = useState(null);\n  const [clickedUsersMessages, setClickedUserMessages] = useState(null);\n\n  const getMessages = async (senderId, recipientId) => {\n    try {\n      console.log({\n        'userId': userId,\n        'correspondingUserId': clickedUserId\n      });\n      const response = await axios.get('http://localhost:8000/messages', {\n        params: {\n          userId: senderId,\n          correspondingUserId: recipientId\n        }\n      });\n      return response.data;\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    setUsersMessages(getMessages(userId, clickedUserId)), setClickedUserMessages(getMessages(clickedUserId, userId));\n  }, [usersMessages]);\n  console.log(usersMessages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatDisplay, \"UsN+PXeikmPa8NzA86hZ7ap6QuE=\");\n\n_c = ChatDisplay;\nexport default ChatDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"sources":["C:/OpenServer/domains/react_projects/tinder-clone/client/src/components/ChatDisplay.js"],"names":["Chat","ChatInput","axios","useEffect","useState","ChatDisplay","user","clickedUser","userId","user_id","clickedUserId","usersMessages","setUserMessages","clickedUsersMessages","setClickedUserMessages","getMessages","senderId","recipientId","console","log","response","get","params","correspondingUserId","data","e","setUsersMessages"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AAEA,MAAMC,WAAW,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAwB;AACzC,QAAMC,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,OAArB;AACA,QAAMC,aAAa,GAAGH,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEE,OAAnC;AACA,QAAM,CAACE,aAAD,EAAgBC,eAAhB,IAAmCR,QAAQ,CAAC,IAAD,CAAjD;AACA,QAAM,CAACS,oBAAD,EAAuBC,sBAAvB,IAAiDV,QAAQ,CAAC,IAAD,CAA/D;;AAEA,QAAMW,WAAW,GAAG,OAAOC,QAAP,EAAiBC,WAAjB,KAAiC;AACjD,QAAI;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAC,kBAAUX,MAAX;AAAmB,+BAAuBE;AAA1C,OAAZ;AACA,YAAMU,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,gCAAV,EAA4C;AAC/DC,QAAAA,MAAM,EAAE;AAACd,UAAAA,MAAM,EAAEQ,QAAT;AAAmBO,UAAAA,mBAAmB,EAAEN;AAAxC;AADuD,OAA5C,CAAvB;AAGA,aAAOG,QAAQ,CAACI,IAAhB;AAEH,KAPD,CAOE,OAAOC,CAAP,EAAU;AACRP,MAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AACH;AACJ,GAXD;;AAaAtB,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,gBAAgB,CAACX,WAAW,CAACP,MAAD,EAASE,aAAT,CAAZ,CAAhB,EACAI,sBAAsB,CAACC,WAAW,CAACL,aAAD,EAAgBF,MAAhB,CAAZ,CADtB;AAEH,GAHQ,EAGN,CAACG,aAAD,CAHM,CAAT;AAKAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,aAAZ;AAEA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAhCD;;GAAMN,W;;KAAAA,W;AAkCN,eAAeA,WAAf","sourcesContent":["import Chat from \"./Chat\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport axios from \"axios\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst ChatDisplay = ({user, clickedUser}) => {\r\n    const userId = user?.user_id\r\n    const clickedUserId = clickedUser?.user_id\r\n    const [usersMessages, setUserMessages] = useState(null)\r\n    const [clickedUsersMessages, setClickedUserMessages] = useState(null)\r\n\r\n    const getMessages = async (senderId, recipientId) => {\r\n        try {\r\n            console.log({'userId': userId, 'correspondingUserId': clickedUserId})\r\n            const response = await axios.get('http://localhost:8000/messages', {\r\n                params: {userId: senderId, correspondingUserId: recipientId}\r\n            })\r\n            return response.data\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUsersMessages(getMessages(userId, clickedUserId)),\r\n        setClickedUserMessages(getMessages(clickedUserId, userId))\r\n    }, [usersMessages])\r\n\r\n    console.log(usersMessages)\r\n\r\n    return (\r\n        <div>\r\n            <Chat/>\r\n            <ChatInput/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatDisplay\r\n"]},"metadata":{},"sourceType":"module"}